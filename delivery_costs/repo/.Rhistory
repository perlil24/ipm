#TODO we can do it like this for now but i think it's best to get the model object or the var:covar matrix from
#the authors, then predict like a regular lmer
#we could simulate the lmer if necessary using makeLmer but it requires more info about the model output
#here's a hacky way to make a fake lm with the provided coefficients
#first generate a fake dataset to run our lm over
fake_dt <- data.table(eco=rnorm(n = 1000, mean = 0, sd = 1),
vol=rnorm(n = 1000, mean = 0, sd = 1),
int=rnorm(n = 1000, mean = 0, sd = 1),
rds=rnorm(n = 1000, mean = 0, sd = 1),
yrs=rnorm(n = 1000, mean = 0, sd = 1),
cov=rnorm(n = 1000, mean = 0, sd = 1),
nat=rnorm(n = 1000, mean = 0, sd = 1),
sch=rnorm(n = 1000, mean = 0, sd = 1),
pop_treated=rnorm(n = 1000, mean = 0, sd = 1),
pop_density=rnorm(n = 1000, mean = 0, sd = 1),
gdp=rnorm(n = 1000, mean = 0, sd = 1),
cost=rnorm(n = 1000, mean = 0, sd = 1))
#setup a fake lm model that will store our extracted coefs
fake_mod <- lm(cost~eco+vol+log(int)+log(rds)+
yrs+cov+nat+sch+log(pop_treated)+log(pop_density)+log(gdp)+
eco:log(int)+cov:nat+eco:sch+cov:sch+
nat:log(pop_treated)+nat:log(pop_density)+nat:log(gdp),
data=fake_dt)
#then inject our literature coefficients
#TODO setup some tests to assert that model formula matches coef dt order
coef_names <- fake_mod$coefficients %>% names #extract the names for clarity because injecting erases them
#also make a vector of the ivs for later examination
coef_vars <- coef_names %>%
.[!(.%like%':')] %>%
.[!(.%like%'Intercept')] %>%
str_remove_all(., "log\\(") %>%
str_remove_all(., "\\)")
#inject coefficients from the extraction dt into the fake model obj
fake_mod$coefficients <- unlist(coef_dt[1]) %>% as.numeric()
names(fake_mod$coefficients) <- coef_names #preserve the names
#start building a new model for IU level predicting
setDT(mda_uc)[, pop_treated := pop] %>%  #set to match our naming convention
.[, pop_density := den] %>%  #set to match our naming convention
.[, cov := cov/100] #treat as a percent so we can test logit transforms
#lets examine some of the values
#split out vars so we can melt and compare
dummy_vars <- c('eco', 'vol', 'sch', 'nat')
cont_vars <- c('int', 'rds', 'yrs', 'cov', 'pop_treated', 'pop_density', 'gdp') #we will plot only the continuous vars
plot_dt <- melt(mda_uc,
measure.vars=cont_vars,
variable.name = 'dep_var',
value.name = 'dep_value')
head(plot_dt)
out_dir
head(dt)
table(dt$sch)
# ---PREDICT------------------------------------------------------------------------------------------------------------
#generate also the IU cost
dt[gdp>max(mda_uc$gdp, na.rm=T), gdp := max(mda_uc$gdp, na.rm=T)] #cap GDP to maximum value in dataset
dt[, cost_iu := predict(mod, newdata =dt, re.form=NA) %>% exp]
summary(mod)
#run our version of the model
mod <- lmer(log(ucb)~eco+vol+log(int)+log(rds)+yrs+logit(cov)+sch+
log(pop_treated)*log(pop_density)+log(gdp)+
VUT+Kri+Fri+Mon+
eco:log(int)+eco:sch+sch:logit(cov)+
(1|study_ref),
data=mda_uc[nat==0])
#run our version of the model
mod <- lmer(log(ucb)~eco+vol+log(int)+log(rds)+yrs+car::logit(cov)+sch+
log(pop_treated)*log(pop_density)+log(gdp)+
VUT+Kri+Fri+Mon+
eco:log(int)+eco:sch+sch:logit(cov)+
(1|study_ref),
data=mda_uc[nat==0])
#run our version of the model
mod <- lmer(log(ucb)~eco+vol+log(int)+log(rds)+yrs+car::logit(cov)+sch+
log(pop_treated)*log(pop_density)+log(gdp)+
VUT+Kri+Fri+Mon+
eco:log(int)+eco:sch+sch:car::logit(cov)+
(1|study_ref),
data=mda_uc[nat==0])
summary(mod)
dt[, cost_iu := predict(mod, newdata =dt, re.form=NA) %>% exp]
#output the results
write.csv(dt[, c('iso', 'scenario', 'year_id', 'IU_ID', coef_vars, 'cost_iu'), with=F],
file=file.path(out_dir, 'delivery_cost_preds_integrated.csv'))
dir.create(out_dir)
dir.create(viz_dir)
#output the results
write.csv(dt[, c('iso', 'scenario', 'year_id', 'IU_ID', coef_vars, 'cost_iu'), with=F],
file=file.path(out_dir, 'delivery_cost_preds.csv'))
dt[iso=="NGA", c('iso', 'IU_ID', coef_vars, 'cost_iu'), with=F]
#highlight outliers for plots
dt[, iso_label := ifelse(isOutlier(cost_iu), iso, NA_character_)]
##plot the results##
#check out the distributions of natl values and then the subnational ones by country
natlDensPlot <- function(this_iso, var, dt) {
message(var)
ggplot(dt[iso%in%this_iso], aes_string(var)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8) +
ggtitle("Delivery Cost Distributions") +
theme_minimal()
}
#natl
natlDensPlot(unique(lf_dt$iso), var='cost_iu', dt=lf_dt)
file.path(viz_dir, 'natl_cost_distributions.png') %>% ggsave(height=8, width=12)
#subnatl, binned by gdp quintiles
subnatlDensPlot <- function(i, var, dt) {
message(var)
ggplot(dt[gdp_quint%in%i & year_id %in%seq(2020,2040,5)], aes_string(var, fill='iso')) +
geom_density(alpha=0.65) +
scale_x_log10()+
scale_fill_brewer('Country', palette = 'Set1') +
facet_wrap(~year_id)+
ggtitle(paste0("Delivery Cost Distributions for GDP Quintile #", i)) +
theme_minimal()
}
pdf(file.path(viz_dir, 'subnatl_cost_distributions.pdf'), height=8, width=12)
lapply(unique(lf_dt$gdp_quint) %>% sort, subnatlDensPlot, dt=lf_dt, var='cost_iu')
dev.off()
head(iu_cov_dt)
head(dens_dt)
assumption_dt <- int_dt <- file.path(data_dir, assumptions_path) %>%
fread
head(assumption_dt)
assumption_dt <- int_dt <- file.path(data_dir, assumptions_path) %>%
fread(header=T)
head(assumption_dt)
table(assumption_dt$parameter)
assumption_dt <- int_dt <- file.path(data_dir, assumptions_path) %>%
fread(header=T) %>%
melt(mda_uc,
id.vars=c('scenario', 'parameter'),
variable.name = 'year_id')
head(dt)
c(2022:2040) %>% as.character
assumption_dt <- int_dt <- file.path(data_dir, assumptions_path) %>%
fread(header=T) %>%
melt(id.vars=c('scenario', 'parameter'),
measure.vars = c(2022:2040) %>% as.character,
variable.name = 'year_id')
head(assumption_dt)
assumption_dt <- int_dt <- file.path(data_dir, assumptions_path) %>%
fread(header=T) %>%
melt(id.vars=c('scenario', 'parameter'),
measure.vars = c(2022:2040) %>% as.character,
variable.name = 'year_id') %>%
dcast(scenario+year_id~.,
value.var='value')
head(assumption_dt)
assumption_dt <- int_dt <- file.path(data_dir, assumptions_path) %>%
fread(header=T) %>%
melt(id.vars=c('scenario', 'parameter'),
measure.vars = c(2022:2040) %>% as.character,
variable.name = 'year_id') %>%
dcast(scenario+year_id~parameter,
value.var='value')
head(assumption_dt)
assumption_dt <- int_dt <- file.path(data_dir, assumptions_path) %>%
fread(header=T) %>%
melt(id.vars=c('scenario', 'parameter'),
measure.vars = c(2022:2040) %>% as.character,
variable.name = 'year_id') %>%
dcast(scenario+year_id~parameter,
value.var='value') %>%
setnames(., names(.), names(.) %>% tolower)
head(assumption_dt)
ihme_data_dir
pop_path
#disease dataset which is disease/scenario specific
#TODO we are currently just pulling GDP from this and setting all other model assumptions
#eventually we should set it up so that we are pulling that centrally
dt <- file.path(data_dir, 'lf_IU_cost_MDA_delivery_preds.csv') %>%
fread %>%
setnames(., names(.), names(.) %>% tolower) %>%  #force names to lowercase for consistency
unique(by=c('iso')) %>%  #collapse the scenarios, we will use another datasheet
.[, scenario := NULL] %>%
.[, c('iso', 'gdp'), with=F] %>%  #this is all we need for now
#TODO eventually should just retire this dataset as gdp is the only use of it now
#impute the IMP decision constants
#TODO, validate these assumptions and eventually put them all into an assumption sheet to merge on?
.[, eco := 0] %>%
.[, vol := 0] %>%
{ if(disease=='Schisto') .[, int := 1] else . } %>%  #this is now country/cov specific for some diseases
{ if(disease=='LF') .[, rds := 1] else. } %>%  #TODO should be scenario specific but it's not present
#disease dataset which is disease/scenario specific
#TODO we are currently just pulling GDP from this and setting all other model assumptions
#eventually we should set it up so that we are pulling that centrally
dt <- file.path(data_dir, 'lf_IU_cost_MDA_delivery_preds.csv') %>%
fread %>%
setnames(., names(.), names(.) %>% tolower) %>%  #force names to lowercase for consistency
unique(by=c('iso')) %>%  #collapse the scenarios, we will use another datasheet
.[, scenario := NULL] %>%
.[, c('iso', 'gdp'), with=F] %>%  #this is all we need for now
#TODO eventually should just retire this dataset as gdp is the only use of it now
#impute the IMP decision constants
#TODO, validate these assumptions and eventually put them all into an assumption sheet to merge on?
.[, eco := 0] %>%
.[, vol := 0] %>%
{ if(disease=='Schisto') .[, int := 1] else . } %>%  #this is now country/cov specific for some diseases
{ if(disease=='LF') .[, rds := 1] else . } %>%  #TODO should be scenario specific but it's not present
.[, yrs := 5] %>%
.[, nat := 0] %>%  #TODO could invert subnat but its the same assumption
{ if(disease=='LF') .[, sch := 1] else. } %>%
#disease dataset which is disease/scenario specific
#TODO we are currently just pulling GDP from this and setting all other model assumptions
#eventually we should set it up so that we are pulling that centrally
dt <- file.path(data_dir, 'lf_IU_cost_MDA_delivery_preds.csv') %>%
fread %>%
setnames(., names(.), names(.) %>% tolower) %>%  #force names to lowercase for consistency
unique(by=c('iso')) %>%  #collapse the scenarios, we will use another datasheet
.[, scenario := NULL] %>%
.[, c('iso', 'gdp'), with=F] %>%  #this is all we need for now
#TODO eventually should just retire this dataset as gdp is the only use of it now
#impute the IMP decision constants
#TODO, validate these assumptions and eventually put them all into an assumption sheet to merge on?
.[, eco := 0] %>%
.[, vol := 0] %>%
{ if(disease=='Schisto') .[, int := 1] else . } %>%  #this is now country/cov specific for some diseases
{ if(disease=='LF') .[, rds := 1] else . } %>%  #TODO should be scenario specific but it's not present
.[, yrs := 5] %>%
.[, nat := 0] %>%  #TODO could invert subnat but its the same assumption
{ if(disease=='LF') .[, sch := 1] else. } %>%
dt <- file.path(data_dir, 'lf_IU_cost_MDA_delivery_preds.csv') %>%
fread %>%
setnames(., names(.), names(.) %>% tolower) %>%  #force names to lowercase for consistency
unique(by=c('iso')) %>%  #collapse the scenarios, we will use another datasheet
.[, scenario := NULL] %>%
.[, c('iso', 'gdp'), with=F] %>%  #this is all we need for now
#TODO eventually should just retire this dataset as gdp is the only use of it now
#impute the IMP decision constants
#TODO, validate these assumptions and eventually put them all into an assumption sheet to merge on?
.[, eco := 0] %>%
.[, vol := 0] %>%
{ if(disease=='Schisto') .[, int := 1] else . }
dt <- file.path(data_dir, 'lf_IU_cost_MDA_delivery_preds.csv') %>%
fread %>%
setnames(., names(.), names(.) %>% tolower) %>%  #force names to lowercase for consistency
unique(by=c('iso')) %>%  #collapse the scenarios, we will use another datasheet
.[, scenario := NULL] %>%
.[, c('iso', 'gdp'), with=F] %>%  #this is all we need for now
#TODO eventually should just retire this dataset as gdp is the only use of it now
#impute the IMP decision constants
#TODO, validate these assumptions and eventually put them all into an assumption sheet to merge on?
.[, eco := 0] %>%
.[, vol := 0] %>%
{ if(disease=='Schisto') .[, int := 1] else . } %>%  #this is now country/cov specific for some diseases
{ if(disease=='LF') .[, rds := 1] else . }
#disease dataset which is disease/scenario specific
#TODO we are currently just pulling GDP from this and setting all other model assumptions
#eventually we should set it up so that we are pulling that centrally
dt <- file.path(data_dir, 'lf_IU_cost_MDA_delivery_preds.csv') %>%
fread %>%
setnames(., names(.), names(.) %>% tolower) %>%  #force names to lowercase for consistency
unique(by=c('iso')) %>%  #collapse the scenarios, we will use another datasheet
.[, scenario := NULL] %>%
.[, c('iso', 'gdp'), with=F] %>%  #this is all we need for now
#TODO eventually should just retire this dataset as gdp is the only use of it now
#impute the IMP decision constants
#TODO, validate these assumptions and eventually put them all into an assumption sheet to merge on?
.[, eco := 0] %>%
.[, vol := 0] %>%
{ if(disease=='Schisto') .[, int := 1] else . } %>%  #this is now country/cov specific for some diseases
{ if(disease=='LF') .[, rds := 1] else . } %>%  #TODO should be scenario specific but it's not present
.[, yrs := 5] %>%
.[, nat := 0] %>%  #TODO could invert subnat but its the same assumption
{ if(disease=='LF') .[, sch := 1] else . } %>%
#.[, den := pop_density] %>% #match the naming in fitzpatrick model
#.[, pop := str_replace_all(pop, ',', '') %>% as.numeric] %>% #convert from chr to numeric
#.[, pop_treated := str_replace_all(`mda size`, ',', '') %>% as.numeric] %>% #convert from chr to numeric
.[, gdp := str_replace_all(gdp, ',', '') %>% as.numeric] %>% #convert from chr to numeric
.[, VUT := 0] %>% #create study level dummies and set to 0
.[, Kri := 0] %>% #create study level dummies and set to 0
.[, Fri := 0] %>% #create study level dummies and set to 0
.[, Mon := 0] #create study level dummies and set to 0
#there are 6 countries some missing pops/mda size/GDPs so i will impute them using world bank figures
dt[iso=='BDI', gdp:= 221.48]
dt[iso=='BFA', gdp:= 893.08]
dt[iso=='MWI', gdp:= 634.84]
dt[iso=='SLE', gdp:= 480.04]
dt[iso=='SWZ', gdp:= 3978.4]
dt[iso=='TZZ', gdp:= 1031] #zanzibar: i didnt see this split out on the world bank site so i used UN figures here:
#http://data.un.org/Data.aspx?d=SNAAMA&f=grID:101;currID:USD;pcFlag:1;crID:836
#add quintiles of gdp
dt[, gdp_quint := cut(gdp, quantile(gdp, probs=0:5/5, na.rm=T), include.lowest=TRUE, labels=FALSE)]
#they are also missing pop/pop densities, using the mean by GDP for now
# dt[, pop := impute_mean(pop), by=gdp_quint] #missing densities for some countries (see below)
# dt[, den := impute_mean(den), by=gdp_quint] #missing densities for some countries (see below)
#bring in the IU level data and merge it on to expand and calculate pop treated
#iu/scenario specific coverage
iu_cov_dt <- file.path(iu_data_dir, iu_path) %>%
fread
#iu level population data
dens_dt <- file.path(iu_data_dir, iu_dens_path) %>%
fread
assumption_dt <- int_dt <- file.path(data_dir, assumptions_path) %>%
fread(header=T) %>%
melt(id.vars=c('scenario', 'parameter'),
measure.vars = c(2022:2040) %>% as.character,
variable.name = 'year_id') %>%
dcast(scenario+year_id~parameter,
value.var='value') %>%
setnames(., names(.), names(.) %>% tolower)
}
assumption_dt <- int_dt <- file.path(data_dir, assumptions_path) %>%
fread(header=T) %>%
melt(id.vars=c('scenario', 'parameter'),
measure.vars = c(2022:2040) %>% as.character,
variable.name = 'year_id') %>%
dcast(scenario+year_id~parameter,
value.var='value') %>%
setnames(., names(.), names(.) %>% tolower)
dt <- merge(dt, iu_cov_dt, by.x=c('iso'), by.y=c('ISO'))
dt <- merge(dt, dens_dt, by=c('IU_ID', 'year_id')) #TODO verify correct year
if(disease=='LF') dt <- merge(dt, int_dt, by.x=c('iso'), by.y=c('ISO'))
else if (disease=='Schisto') dt <- merge(dt, assumption_dt, by.x=c('iso'), by.y=c('ISO'))
#expand to the IU level and add coverage/density
dt <- merge(dt, iu_cov_dt, by.x=c('iso'), by.y=c('ISO'))
dt <- merge(dt, dens_dt, by=c('IU_ID', 'year_id')) #TODO verify correct year
if(disease=='LF') dt <- merge(dt, int_dt, by.x=c('iso'), by.y=c('ISO'))
if (disease=='Schisto') dt <- merge(dt, assumption_dt, by.x=c('iso'), by.y=c('ISO'))
#eventually we should set it up so that we are pulling that centrally
dt <- file.path(data_dir, 'lf_IU_cost_MDA_delivery_preds.csv') %>%
fread %>%
setnames(., names(.), names(.) %>% tolower) %>%  #force names to lowercase for consistency
unique(by=c('iso')) %>%  #collapse the scenarios, we will use another datasheet
.[, scenario := NULL] %>%
.[, c('iso', 'gdp'), with=F] %>%  #this is all we need for now
#TODO eventually should just retire this dataset as gdp is the only use of it now
#impute the IMP decision constants
#TODO, validate these assumptions and eventually put them all into an assumption sheet to merge on?
.[, eco := 0] %>%
.[, vol := 0] %>%
{ if(disease=='Schisto') .[, int := 1] else . } %>%  #this is now country/cov specific for some diseases
{ if(disease=='LF') .[, rds := 1] else . } %>%  #TODO should be scenario specific but it's not present
.[, yrs := 5] %>%
.[, nat := 0] %>%  #TODO could invert subnat but its the same assumption
{ if(disease=='LF') .[, sch := 1] else . } %>%
#.[, den := pop_density] %>% #match the naming in fitzpatrick model
#.[, pop := str_replace_all(pop, ',', '') %>% as.numeric] %>% #convert from chr to numeric
#.[, pop_treated := str_replace_all(`mda size`, ',', '') %>% as.numeric] %>% #convert from chr to numeric
.[, gdp := str_replace_all(gdp, ',', '') %>% as.numeric] %>% #convert from chr to numeric
.[, VUT := 0] %>% #create study level dummies and set to 0
.[, Kri := 0] %>% #create study level dummies and set to 0
.[, Fri := 0] %>% #create study level dummies and set to 0
.[, Mon := 0] #create study level dummies and set to 0
#TODO not clear what to do with unit percentages...not given as decimals in table 2
#.[, cov := str_replace(coverage, '%', '') %>% as.numeric] %>%
#.[, cov := cov/1] #need to confirm this is the right way to unit the percentages
#there are 6 countries some missing pops/mda size/GDPs so i will impute them using world bank figures
dt[iso=='BDI', gdp:= 221.48]
dt[iso=='BFA', gdp:= 893.08]
dt[iso=='MWI', gdp:= 634.84]
dt[iso=='SLE', gdp:= 480.04]
dt[iso=='SWZ', gdp:= 3978.4]
dt[iso=='TZZ', gdp:= 1031] #zanzibar: i didnt see this split out on the world bank site so i used UN figures here:
#http://data.un.org/Data.aspx?d=SNAAMA&f=grID:101;currID:USD;pcFlag:1;crID:836
#add quintiles of gdp
dt[, gdp_quint := cut(gdp, quantile(gdp, probs=0:5/5, na.rm=T), include.lowest=TRUE, labels=FALSE)]
#they are also missing pop/pop densities, using the mean by GDP for now
# dt[, pop := impute_mean(pop), by=gdp_quint] #missing densities for some countries (see below)
# dt[, den := impute_mean(den), by=gdp_quint] #missing densities for some countries (see below)
#bring in the IU level data and merge it on to expand and calculate pop treated
#iu/scenario specific coverage
iu_cov_dt <- file.path(iu_data_dir, iu_path) %>%
fread
#iu level population data
dens_dt <- file.path(iu_data_dir, iu_dens_path) %>%
fread
#disease integration data at country level
if(disease=='LF') {
int_dt <- file.path(iu_data_dir, iu_int_path) %>%
read_excel() %>%
as.data.table() %>%
.[, .(ISO, `Co-endemic`)] %>%
unique() %>% #TODO verify that theres no difference in integration between the different Product/Drug groups (there are 2 diff)
.[, int := 1] %>%
.[`Co-endemic`==1, int := 2]
#sch/rds at scenario level
} else if (disease=='Schisto') {
assumption_dt <- int_dt <- file.path(data_dir, assumptions_path) %>%
fread(header=T) %>%
melt(id.vars=c('scenario', 'parameter'),
measure.vars = c(2022:2040) %>% as.character,
variable.name = 'year_id') %>%
dcast(scenario+year_id~parameter,
value.var='value') %>%
setnames(., names(.), names(.) %>% tolower)
}
#expand to the IU level and add coverage/density
dt <- merge(dt, iu_cov_dt, by.x=c('iso'), by.y=c('ISO'))
dt <- merge(dt, dens_dt, by=c('IU_ID', 'year_id')) #TODO verify correct year
if(disease=='LF') dt <- merge(dt, int_dt, by.x=c('iso'), by.y=c('ISO'))
if (disease=='Schisto') dt <- merge(dt, assumption_dt, by.x=c('iso'), by.y=c('ISO'))
head(dt)
head(assumption_dt)
if (disease=='Schisto') dt <- merge(dt, assumption_dt, by=c('scenario', 'year_id'))
str(dt)
str(assumption_dt)
help(melt)
assumption_dt <- int_dt <- file.path(data_dir, assumptions_path) %>%
fread(header=T) %>%
melt(id.vars=c('scenario', 'parameter'),
measure.vars = c(2022:2040) %>% as.character,
variable.name = 'year_id',
varaible.factor=F) %>%
dcast(scenario+year_id~parameter,
value.var='value') %>%
setnames(., names(.), names(.) %>% tolower)
if (disease=='Schisto') dt <- merge(dt, assumption_dt, by=c('scenario', 'year_id'))
str(assumption_dt)
assumption_dt <- int_dt <- file.path(data_dir, assumptions_path) %>%
fread(header=T) %>%
melt(id.vars=c('scenario', 'parameter'),
measure.vars = c(2022:2040) %>% as.character,
variable.name = 'year_id',
varaible.factor=F)
str(assumption_dt)
assumption_dt <- int_dt <- file.path(data_dir, assumptions_path) %>%
fread(header=T) %>%
melt(id.vars=c('scenario', 'parameter'),
measure.vars = c(2022:2040) %>% as.character,
variable.name = 'year_id',
variable.factor=F) %>%
dcast(scenario+year_id~parameter,
value.var='value') %>%
setnames(., names(.), names(.) %>% tolower)
str(assumption_dt)
assumption_dt <- int_dt <- file.path(data_dir, assumptions_path) %>%
fread(header=T) %>%
melt(id.vars=c('scenario', 'parameter'),
measure.vars = c(2022:2040) %>% as.character,
variable.name = 'year_id',
variable.factor=F) %>%
.[, year_id %>% as.integer(year_id)]
str(assumption_dt)
assumption_dt <- int_dt <- file.path(data_dir, assumptions_path) %>%
fread(header=T) %>%
melt(id.vars=c('scenario', 'parameter'),
measure.vars = c(2022:2040) %>% as.character,
variable.name = 'year_id',
variable.factor=F) %>%
.[, year_id := as.integer(year_id)] %>%
dcast(scenario+year_id~parameter,
value.var='value') %>%
setnames(., names(.), names(.) %>% tolower)
str(assumption_dt)
if (disease=='Schisto') dt <- merge(dt, assumption_dt, by=c('scenario', 'year_id'))
dt[, pop_treated := cov*adj_pop]#calculate the target pop as cov*IU pop
dt[, pop_density := dens]
head(dt)
# ---PREDICT------------------------------------------------------------------------------------------------------------
#generate also the IU cost
dt[gdp>max(mda_uc$gdp, na.rm=T), gdp := max(mda_uc$gdp, na.rm=T)] #cap GDP to maximum value in dataset
dt[, cost_iu := predict(mod, newdata =dt, re.form=NA) %>% exp]
#output the results
write.csv(dt[, c('iso', 'scenario', 'year_id', 'IU_ID', coef_vars, 'cost_iu'), with=F],
file=file.path(out_dir, 'delivery_cost_preds.csv'))
#natl
natlDensPlot(unique(lf_dt$iso), var='cost_iu', dt=lf_dt)
file.path(viz_dir, 'natl_cost_distributions.png') %>% ggsave(height=8, width=12)
#subnatl, binned by gdp quintiles
subnatlDensPlot <- function(i, var, dt) {
message(var)
ggplot(dt[gdp_quint%in%i & year_id %in%seq(2020,2040,5)], aes_string(var, fill='iso')) +
geom_density(alpha=0.65) +
scale_x_log10()+
scale_fill_brewer('Country', palette = 'Set1') +
facet_wrap(~year_id)+
ggtitle(paste0("Delivery Cost Distributions for GDP Quintile #", i)) +
theme_minimal()
}
pdf(file.path(viz_dir, 'subnatl_cost_distributions.pdf'), height=8, width=12)
lapply(unique(lf_dt$gdp_quint) %>% sort, subnatlDensPlot, dt=lf_dt, var='cost_iu')
dev.off()
out_dir
#output the results
write.csv(dt[, c('iso', 'scenario', 'year_id', 'IU_ID', coef_vars, 'cost_iu'), with=F],
file=file.path(drop_out_dir, 'delivery_cost_preds.csv'))
file.path(drop_out_dir, 'delivery_cost_preds.csv')
dev.off()
#subnatl, binned by gdp quintiles
subnatlDensPlot <- function(i, var, dt) {
message(var)
ggplot(dt[gdp_quint%in%i & year_id %in%seq(2020,2040,5)], aes_string(var, fill='iso')) +
geom_density(alpha=0.65) +
scale_x_log10()+
scale_fill_brewer('Country', palette = 'Set1') +
facet_wrap(~year_id)+
ggtitle(paste0("Delivery Cost Distributions for GDP Quintile #", i)) +
theme_minimal()
}
pdf(file.path(viz_dir, 'subnatl_cost_distributions.pdf'), height=8, width=12)
lapply(unique(lf_dt$gdp_quint) %>% sort, subnatlDensPlot, dt=lf_dt, var='cost_iu')
lapply(unique(lf_dt$gdp_quint) %>% sort, subnatlDensPlot, dt=lf_dt, var='cost_iu')
lapply(unique(dt$gdp_quint) %>% sort, subnatlDensPlot, dt=lf_dt, var='cost_iu')
head(dt)
lapply(unique(dt$gdp_quint) %>% sort, subnatlDensPlot, dt=dt, var='cost_iu')
dev.off()
pdf(file.path(viz_dir, 'subnatl_cost_distributions.pdf'), height=8, width=12)
lapply(unique(dt$gdp_quint) %>% sort, subnatlDensPlot, dt=dt, var='cost_iu')
dev.off()
55.2/2
# ---DIAGNOSTICS--------------------------------------------------------------------------------------------------------
##examine some rows and test them against the online shiny tool
#this line can be used interactively to test different country and IU combinations in a compact manner
dt[iso=="NGA", c('iso', 'IU_ID', coef_vars, 'cost_iu'), with=F]
# ---DIAGNOSTICS--------------------------------------------------------------------------------------------------------
##examine some rows and test them against the online shiny tool
#this line can be used interactively to test different country and IU combinations in a compact manner
dt[iso=="GAB", c('iso', 'IU_ID', coef_vars, 'cost_iu'), with=F]
# ---DIAGNOSTICS--------------------------------------------------------------------------------------------------------
##examine some rows and test them against the online shiny tool
#this line can be used interactively to test different country and IU combinations in a compact manner
dt[iso=="GAM", c('iso', 'IU_ID', coef_vars, 'cost_iu'), with=F]
summary(mod)
